---
export interface Props {
  title: string;
}

const { title } = Astro.props;
import Nav from "../components/Nav.astro";
import Footer from "../components/Footer.astro";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="shortcut icon" type="image/png" href="favicon.svg" />
    <link rel="apple-touch-icon" href="favicon.svg" />

    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />

    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content="Tlon Corporation" />
    <meta
      name="description"
      content="Tlon exists to build exceptionally well-crafted software for people’s everyday lives."
    />
    <meta name="cf-2fa-verify" content="hj147kyae651DBG6j8fsg" />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://tlon.io/" />
    <meta property="og:title" content="Tlon Corporation" />
    <meta
      property="og:description"
      content="Tlon exists to build exceptionally well-crafted software for people’s everyday lives."
    />
    <meta
      property="og:image"
      content="https://d2w9rnfcy7mm78.cloudfront.net/20991844/original_05337a7edcadf2b018a2c4d14d4a3139.png"
    />

    <!-- Twitter cards -->
    <meta name="twitter:site" content="@tloncorporation" />
    <meta name="twitter:title" content="Tlon Corporation" />
    <meta
      name="twitter:description"
      content="Tlon exists to build exceptionally well-crafted software for people’s everyday lives."
    />
    <meta name="twitter:card" content="summary_large_image" />
    <meta
      name="twitter:image"
      content="https://d2w9rnfcy7mm78.cloudfront.net/20991844/original_05337a7edcadf2b018a2c4d14d4a3139.png"
    />
  </head>

  <body
    class="grid
		grid-cols-12
		gap-4
		
		text-md
		lg:text-xl
		antialiased
		dark:bg-neutral-900
		dark:text-white"
  >
    <Nav />
    <slot />
    <Footer />
  </body>
</html>

<style is:global>
  @font-face {
    font-family: "Diatype Mono Variable";
    src: url("/fonts/ABCDiatypeMonoVariable.woff2") format("woff2");
    font-style: normal;
    font-weight: 333;
    font-display: swap;
    font-named-instance: "Regular";
  }

  :root {
    font-family: "Diatype Mono Variable", monospace;
  }
  @supports (font-variation-settings: normal) {
    :root {
      font-family: "Diatype Mono Variable", monospace;
    }
  }

  details {
    margin-bottom: 0.5rem;
  }

  details > summary {
    cursor: pointer;
  }

  details[open] > summary {
    font-weight: bold;
  }

  details[open] > div {
    padding-left: 1rem;
    border-left: 2px solid #ccc;
  }

  details > summary:first-of-type {
    list-style: none;
  }

  details > div {
    margin-top: 1rem;
    /* margin: 0.5rem 0;
    padding: 1.5rem 2rem 0.5rem;
    background: #ededed;
    border-radius: 0.5rem; */
  }

  details > div > p img,
  details > div > video {
    display: none;
  }

  details > div > p,
  details > div > ul,
  details > div > ol,
  details > div > pre {
    margin: 0 0 1rem;
  }

  details > div > pre {
    overflow-x: scroll;
  }

  details > div ol li {
    list-style-type: decimal;
    margin-left: 2rem;
    margin-bottom: 0.5rem;
  }

  details > div ul li {
    list-style-type: disc;
    margin-left: 2rem;
    margin-bottom: 0.5rem;
  }

  details > div > *:last-child {
    margin-bottom: 1rem;
  }
</style>

<script>
  // identify our elements
  const firstElement = document.querySelector("main");
  const nav = document.querySelector("#navbar");

  // callback function for scroll and touchmove event listeners
  const handleScrollAndTouchMove = () => {
    // measure the scroll-sensitive bottom of the nav (includes margin)
    const navHeight = nav?.getBoundingClientRect().bottom;
    // get the top of the first element
    const position = firstElement?.getBoundingClientRect().top;

    // if the top of the first element is above the nav, add a border
    if (position && navHeight && position < navHeight) {
      nav.classList.add("border-b");
    }

    // if the top of the first element is below the nav, remove the border
    if (position && navHeight && position > navHeight) {
      nav.classList.remove("border-b");
    }
  };

  // add scroll and touchmove event listeners
  document.addEventListener("scroll", handleScrollAndTouchMove);
  document.addEventListener("touchmove", handleScrollAndTouchMove);
</script>
